#version 440 core

//http://onrendering.blogspot.com/2011/12/tessellation-on-gpu-curved-pn-triangles.html

//Phong patch
struct PhongPatch
{
	float termIJ;
	float termJK;
	float termIK;
};
 

layout(vertices = 3) out;

in vec3 vPosition[];
in vec3 vNormal[];
in vec2 vTexCoord[];




out vec3 tcPosition[3];
out vec3 tcNormal[3];
out vec2 tcTexCoord[3];
out PhongPatch tcPhongPatch[3];
out float tcD[3];

uniform float tess;



#define ID gl_InvocationID

float PIi(int i, vec3 q)
{
	vec3 q_minus_p = q - vPosition[i];
	return q[ID] - dot(q_minus_p, vNormal[i]) * vNormal[i][ID];
}



void main()
{
	// LoD add here

    	gl_TessLevelOuter[ID] = tess;
		//gl_TessLevelOuter[1] = tess;
		//gl_TessLevelOuter[2] = tess;

		gl_TessLevelInner[0] = tess;
		tcD[ID] = tess;
	

	

	
	tcPosition[ID] = vPosition[ID];
	tcNormal[ID] = vNormal[ID];
	tcTexCoord[ID] = vTexCoord[ID];



	vec3 Pi = vPosition[0];
	vec3 Pj = vPosition[1];
	vec3 Pk = vPosition[2];
	

	tcPhongPatch[ID].termIJ = PIi(0, Pj) + PIi(1, Pi);
	tcPhongPatch[ID].termJK = PIi(1, Pk) + PIi(2, Pj);
	tcPhongPatch[ID].termIK = PIi(2, Pi) + PIi(0, Pk);



}
